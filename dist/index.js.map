{"version":3,"sources":["node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/getPrototypeOf.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/inherits.js","concepts/geometric-object.js","spaces/zero/point.js","spaces/zero.js","node_modules/@babel/runtime/helpers/isNativeFunction.js","node_modules/@babel/runtime/helpers/construct.js","node_modules/@babel/runtime/helpers/wrapNativeSuper.js","node_modules/@babel/runtime/helpers/defineProperty.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","spaces/one/line-segment.js","spaces/one/vector.js","spaces/two/curve.js","spaces/two/polygonal-chain.js","spaces/two/polygon.js","spaces/two/quadrilateral.js","spaces/two/trapezoid.js","spaces/two/parallelogram.js","spaces/two/rectangle.js","spaces/two/smooth-curve.js","spaces/two/oval.js","spaces/two/ellipse.js","spaces/two/circle.js","spaces/two/square.js","spaces/one.js","spaces/two.js","spaces/three.js","index.js"],"names":["GeometricObject","Point","coordinates","x","y","z","Object","assign","ZeroDimensionalSpace","position","LineSegment","endPoint1","endPoint2","Math","sqrt","Vector","tail","head","vector","addendTail","addendHead","pointBetweenTails","midpoint","map","axis","angle","cos","sin","Curve","firstPoint","lastPoint","closed","PolygonalChain","Polygon","Quadrilateral","Trapezoid","Parallelogram","Rectangle","SmoothCurve","Oval","Ellipse","Circle","Square","options","edgeLength","vertex1","vertex2","vertex3","vertex4","diagonalLength","perimeter","area","secondVertex","length","Error","rotate","edge1Length","edge2Length","vertexMap","get","object","console","info","equiangular","clockwise","set","edgeAB","xAxisParallelThroughA","acos","orthogonalSquare","normalMin","orthogonalVertexMap","orthogonalVertex1","orthogonalVertex2","orthogonalVertex3","squareXMin","squareXMax","squareYMin","squareYMax","point","normalizedX","normalMax","normalizedY","newX","newY","denormalizedX","denormalizedY","Map","OneDimensionalSpace","boundary","step","Array","TwoDimensionalSpace","ThreeDimensionalSpace"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","// @flow\nclass GeometricObject {\n\n}\n\nexport default GeometricObject;\n","// @flow\nimport GeometricObject from \"../../concepts/geometric-object.js\";\n\n/**\n * point\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-09-19\n * @class Point\n * @extends {GeometricObject}\n */\nclass Point extends GeometricObject {\n\tx: number;\n\n\ty: number;\n\n\tz: number;\n\n\t$key: \"x\" | \"y\" | \"z\";\n\n\t$value: number;\n\n\t/**\n\t * creates an instance of Point\n\t *\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-09-19\n\t * @param {...number[]} coordinates\n\t * coordinates\n\t * @memberof Position\n\t */\n\tconstructor(...coordinates: number[]) {\n\t\tsuper();\n\n\t\tlet [\n\t\t\tx,\n\t\t\ty,\n\t\t\tz\n\t\t] = coordinates;\n\n\t\tx = x || 0;\n\t\ty = y || 0;\n\t\tz = z || 0;\n\n\t\tObject.assign(this, {\n\t\t\tx,\n\t\t\ty,\n\t\t\tz\n\t\t});\n\t}\n}\n\nexport default Point;\n","// @flow\n\nimport Point from \"./zero/point.js\";\n\n/**\n * zero-dimensional space\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-09-19\n * @class ZeroDimensionalSpace\n */\nclass ZeroDimensionalSpace {\n\tposition: Point;\n\n\tx: number;\n\n\ty: number;\n\n\tz: number;\n\n\t/**\n\t * creates an instance of ZeroDimensionalSpace\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-09-19\n\t * @param {Position} position\n\t * position\n\t * @memberof ZeroDimensionalSpace\n\t */\n\tconstructor(position: Point) {\n\t\tthis.position = position;\n\n\t\tconst {\n\t\t\tx,\n\t\t\ty,\n\t\t\tz\n\t\t} = position;\n\n\t\tObject.assign(this, {\n\t\t\tx,\n\t\t\ty,\n\t\t\tz\n\t\t});\n\t}\n}\n\nexport default ZeroDimensionalSpace;\n","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","// @flow\nimport GeometricObject from \"../../concepts/geometric-object\";\nimport Point from \"../zero/point.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-16\n * @class LineSegment\n * @extends {GeometricObject}\n */\nclass LineSegment extends GeometricObject {\n\t+endPoint1: Point;\n\n\t+endPoint2: Point;\n\n\t/**\n\t * creates an instance of LineSegment\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-16\n\t * @param {Point} endPoint1\n\t * one end point\n\t * @param {Point} endPoint2\n\t * the other end point\n\t * @memberof LineSegment\n\t */\n\tconstructor(endPoint1: Point, endPoint2: Point) {\n\t\tsuper();\n\n\t\tthis.endPoint1 = endPoint1;\n\t\tthis.endPoint2 = endPoint2;\n\t}\n\n\t/**\n\t *\n\t *\n\t * @memberof LineSegment\n\t * @returns {Point}\n\t * the midpoint\n\t */\n\tmidpoint = (): Point => {\n\t\tconst {\n\t\t\tendPoint1,\n\t\t\tendPoint2\n\t\t} = this;\n\n\t\treturn new Point(\n\t\t\t((endPoint1.x + endPoint2.x) / 2),\n\t\t\t((endPoint1.y + endPoint2.y) / 2),\n\t\t\t((endPoint1.z + endPoint2.z) / 2)\n\t\t);\n\t}\n\n\t// TODO: 3D\n\t/**\n\t *\n\t *\n\t * @returns {number}\n\t * length\n\t */\n\tlength = (): number => {\n\t\tconst {\n\t\t\tendPoint1,\n\t\t\tendPoint2\n\t\t} = this;\n\n\t\treturn Math.sqrt(((endPoint2.x - endPoint1.x) ** 2) + ((endPoint2.y - endPoint1.y) ** 2));\n\t}\n}\n\nexport default LineSegment;\n","// @flow\nimport Point from \"../zero/point.js\";\n\nimport LineSegment from \"./line-segment.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-16\n * @class Vector\n * @extends {LineSegment}\n */\nclass Vector extends LineSegment {\n\ttail: Point;\n\n\thead: Point;\n\n\t/**\n\t * creates an instance of Vector\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-16\n\t * @param {Point} tail\n\t * initial point\n\t * @param {Point} head\n\t * terminal point\n\t * @memberof Vector\n\t */\n\tconstructor(tail: Point, head: Point) {\n\t\tsuper(tail, head);\n\n\t\tthis.tail = tail;\n\t\tthis.head = head;\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param {Vector} vector\n\t * vector\n\t * @returns {Vector}\n\t * the sum of the vectors\n\t */\n\tplus = (vector: Vector): Vector => {\n\t\tconst {\n\t\t\ttail,\n\t\t\thead\n\t\t} = this;\n\n\t\tconst {\n\t\t\ttail: addendTail,\n\t\t\thead: addendHead\n\t\t} = vector;\n\n\t\tconst pointBetweenTails = new Vector(\n\t\t\ttail,\n\t\t\taddendTail\n\t\t).midpoint();\n\n\t\treturn new Vector(\n\t\t\tpointBetweenTails,\n\t\t\tnew Point(\n\t\t\t\t...[\n\t\t\t\t\t\"x\",\n\t\t\t\t\t\"y\",\n\t\t\t\t\t\"z\"\n\t\t\t\t].map((axis: \"x\" | \"y\" | \"z\"): number => (\n\t\t\t\t\t-tail[axis] +\n\t\t\t\t\thead[axis] +\n\t\t\t\t\taddendTail[axis] +\n\t\t\t\t\taddendHead[axis] -\n\t\t\t\t\tpointBetweenTails[axis]\n\t\t\t\t))\n\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param {Vector} vector\n\t * vector\n\t * @returns {Vector}\n\t * the sum of the vectors\n\t */\n\tminus = (vector: Vector): Vector => {\n\t\tconst {\n\t\t\ttail,\n\t\t\thead\n\t\t} = this;\n\n\t\tconst {\n\t\t\ttail: addendTail,\n\t\t\thead: addendHead\n\t\t} = vector;\n\n\t\tconst pointBetweenTails = new Vector(\n\t\t\ttail,\n\t\t\taddendTail\n\t\t).midpoint();\n\n\t\treturn new Vector(\n\t\t\tpointBetweenTails,\n\t\t\tnew Point(\n\t\t\t\t...[\n\t\t\t\t\t\"x\",\n\t\t\t\t\t\"y\",\n\t\t\t\t\t\"z\"\n\t\t\t\t].map((axis: \"x\" | \"y\" | \"z\"): number => (\n\t\t\t\t\t-tail[axis] +\n\t\t\t\t\thead[axis] +\n\t\t\t\t\taddendTail[axis] -\n\t\t\t\t\taddendHead[axis] +\n\t\t\t\t\tpointBetweenTails[axis]\n\t\t\t\t))\n\n\t\t\t)\n\t\t);\n\t}\n\n\treverse = () => {\n\t\tconst {\n\t\t\ttail,\n\t\t\thead\n\t\t} = this;\n\n\t\tthis.tail = head;\n\t\tthis.head = tail;\n\t}\n\n\t// TODO: 3D\n\t/**\n\t *\n\t *\n\t * @param {number} angle\n\t * angle in degrees\n\t * @returns {Vector}\n\t * itself\n\t */\n\trotate = (angle: number): Vector => {\n\t\tconst {\n\t\t\ttail,\n\t\t\thead\n\t\t} = this;\n\n\t\tconst x = (\n\t\t\t(\n\t\t\t\t(head.x - tail.x) * Math.cos(angle)\n\t\t\t) -\n\t\t\t(\n\t\t\t\t(head.y - tail.y) * Math.sin(angle)\n\t\t\t) -\n\t\t\ttail.x\n\t\t);\n\n\t\tconst y = (\n\t\t\t(\n\t\t\t\t(head.x - tail.x) * Math.sin(angle)\n\t\t\t) +\n\t\t\t(\n\t\t\t\t(head.y - tail.y) * Math.cos(angle)\n\t\t\t) -\n\t\t\ttail.y\n\t\t);\n\n\t\tthis.head = new Point(x, y);\n\n\t\treturn this;\n\t}\n}\n\nexport default Vector;\n","import GeometricObject from \"../../concepts/geometric-object.js\";\n\n// @flow\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class Curve\n * @extends {GeometricObject}\n */\nclass Curve extends GeometricObject {\n\t+edges: number;\n\n\t+vertices: number;\n\n\t+diagonals: number;\n\n\t+convex: boolean;\n\n\t+closed: boolean;\n\n\t+cyclic: boolean;\n\n\t+tangential: boolean;\n\n\t+equilateral: boolean;\n\n\t+isogonal: boolean;\n\n\t+isotoxal: boolean;\n\n\t+smooth: boolean;\n\n\t/**\n\t * creates an instance of Curve\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-13\n\t * @memberof Curve\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tconst {\n\t\t\tfirstPoint,\n\t\t\tlastPoint\n\t\t} = this;\n\n\t\tif (firstPoint === lastPoint) {\n\t\t\tthis.closed = true;\n\t\t}\n\t}\n}\n\nexport default Curve;\n","// @flow\nimport Curve from \"./curve.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class PolygonalChain\n * @extends {Curve}\n */\nclass PolygonalChain extends Curve {\n\t+equiangular: boolean;\n\n\t/**\n\t * creates an instance of PolygonalChain\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-02\n\t * @memberof PolygonalChain\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default PolygonalChain;\n","// @flow\nimport PolygonalChain from \"./polygonal-chain.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class Polygon\n * @extends {PolygonalChain}\n */\nclass Polygon extends PolygonalChain {\n\t+closed = true;\n\n\t/**\n\t * creates an instance of Polygon\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-02\n\t * @memberof Polygon\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Polygon;\n","// @flow\nimport Polygon from \"./polygon.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class Quadrilateral\n * @extends {Polygon}\n */\nclass Quadrilateral extends Polygon {\n\t+edges = 4;\n\n\t+vertices = 4;\n\n\t+diagonals = 2;\n\n\t/**\n\t * creates an instance of Quadrilateral\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-15\n\t * @memberof Quadrilateral\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Quadrilateral;\n","// @flow\n\nimport Quadrilateral from \"./quadrilateral.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class Trapezoid\n * @extends {Quadrilateral}\n */\nclass Trapezoid extends Quadrilateral {\n\t+convex = true;\n\n\t/**\n\t * creates an instance of Trapezoid\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-02\n\t * @memberof Trapezoid\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Trapezoid;\n","// @flow\nimport Trapezoid from \"./trapezoid.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-02\n * @class Parallelogram\n * @extends {Trapezoid}\n */\nclass Parallelogram extends Trapezoid {\n\t/**\n\t * creates an instance of Parallelogram\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-02\n\t * @memberof Parallelogram\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Parallelogram;\n","// @flow\nimport Point from \"../zero/point.js\";\n\nimport Parallelogram from \"./parallelogram.js\";\n\ntype RectangleOptions = {|\n\tedge1Length: number,\n\tedge2Length: number,\n\tvertex1: Point\n|};\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-09-23\n * @class Rectangle\n * @extends {Parallelogram}\n */\nclass Rectangle extends Parallelogram {\n\t+cyclic = true;\n\n\t+isogonal = true;\n\n\t+closed = false;\n\n\t+equiangular = true;\n\n\t/**\n\t * creates an instance of Rectangle\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-09-23\n\t * @param {RectangleOptions} [options={\n\t * \t\tsideALength: 1,\n\t * \t\tsideBLength: 2\n\t * \t}]\n\t * options\n\t * @param {Position} position\n\t * position\n\t * @memberof Rectangle\n\t */\n\tconstructor(options: RectangleOptions = {\n\t\tedge1Length: 1,\n\t\tedge2Length: 2,\n\t\tvertex1: new Point(0, 0)\n\t}) {\n\t\tsuper();\n\t}\n}\n\nexport default Rectangle;\n","// @flow\n\nimport Curve from \"./curve.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-15\n * @class SmoothCurve\n * @extends {Curve}\n */\nclass SmoothCurve extends Curve {\n\t+smooth = true;\n\n\t/**\n\t * creates an instance of SmoothCurve\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-15\n\t * @memberof SmoothCurve\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default SmoothCurve;\n","// @flow\nimport SmoothCurve from \"./smooth-curve.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-15\n * @class Oval\n * @extends {SmoothCurve}\n */\nclass Oval extends SmoothCurve {\n\t+closed = true;\n\n\t+convex = true;\n\n\t/**\n\t * creates an instance of Oval\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-15\n\t * @memberof Oval\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Oval;\n","// @flow\nimport Oval from \"./oval.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-15\n * @class Ellipse\n * @extends {Oval}\n */\nclass Ellipse extends Oval {\n\t/**\n\t * creates an instance of Ellipse\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-15\n\t * @memberof Ellipse\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Ellipse;\n","// @flow\nimport Ellipse from \"./ellipse.js\";\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-15\n * @class Circle\n * @extends {Ellipse}\n */\nclass Circle extends Ellipse {\n\t/**\n\t * creates an instance of Circle\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-15\n\t * @memberof Circle\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default Circle;\n","// @flow\nimport Point from \"../zero/point.js\";\nimport GeometricObject from \"../../concepts/geometric-object.js\";\nimport Vector from \"../one/vector.js\";\nimport LineSegment from \"../one/line-segment.js\";\n\nimport Rectangle from \"./rectangle.js\";\nimport Circle from \"./circle.js\";\n\ntype HelpingPoints = {|\n\tvertex1: Point,\n\t...{|\n\t\tvertex2?: Point\n\t|} | {|\n\t\tvertex3?: Point\n\t|} | {|\n\t\tvertex4?: Point\n\t|}\n|};\n\ntype RequiredPoints = {|\n\tvertex1: Point,\n\t...{|\n\t\tvertex2: Point\n\t|} | {|\n\t\tvertex3: Point\n\t|} | {|\n\t\tvertex4: Point\n\t|} | {|\n\t\tvertex2: Point,\n\t\tvertex3: Point\n\t|} | {|\n\t\tvertex2: Point,\n\t\tvertex4: Point\n\t|} | {|\n\t\tvertex3: Point,\n\t\tvertex4: Point\n\t|} | {|\n\t\tvertex2: Point,\n\t\tvertex3: Point,\n\t\tvertex4: Point\n\t|}\n|};\n\ntype SquareOptions = {|\n\tedgeLength: number,\n\t...HelpingPoints\n|} | {|\n\tdiagonalLength: number,\n\t...HelpingPoints\n|} | {|\n\tperimeter: number,\n\t...HelpingPoints\n|} | {|\n\tarea: number,\n\t...HelpingPoints\n|} | RequiredPoints;\n\n/**\n *\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-09-21\n * @class Square\n * @extends {Rectangle}\n */\nclass Square extends Rectangle {\n\t+equilateral = true;\n\n\t+isotoxal = true;\n\n\t+tangential = true;\n\n\tvertexMap: Map<\"A\" | \"B\" | \"C\" | \"D\", Point>;\n\n\t/**\n\t * creates an instance of Square\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-09-21\n\t * @param {SquareOptions} [options={edgeLength: 1}]\n\t * side length\n\t * @param {Position} [position=new Position(0, 0)]\n\t * position\n\t * @memberof Square\n\t */\n\tconstructor(options: SquareOptions = {\n\t\tedgeLength: 1,\n\t\tvertex1: new Point(0, 0)\n\t}) {\n\t\tconst {\n\t\t\tvertex1\n\t\t} = options;\n\n\t\tlet edgeLength;\n\n\t\tif (options.edgeLength) {\n\t\t\tedgeLength = options.edgeLength;\n\t\t}\n\t\telse if (options.diagonalLength) {\n\t\t\tedgeLength = options.diagonalLength / Math.sqrt(2);\n\t\t}\n\t\telse if (options.perimeter) {\n\t\t\tedgeLength = options.perimeter / 4;\n\t\t}\n\t\telse if (options.area) {\n\t\t\tedgeLength = Math.sqrt(options.area);\n\t\t}\n\t\telse if (options.vertex2 || options.vertex4) {\n\t\t\tlet secondVertex;\n\n\t\t\tif (options.vertex2) {\n\t\t\t\tsecondVertex = options.vertex2;\n\t\t\t}\n\t\t\telse if (options.vertex4) {\n\t\t\t\tsecondVertex = options.vertex4;\n\t\t\t}\n\n\t\t\tif (secondVertex) {\n\t\t\t\tedgeLength = new LineSegment(vertex1, secondVertex).length();\n\t\t\t}\n\t\t}\n\t\telse if (options.vertex3) {\n\t\t\tconst {\n\t\t\t\tvertex3\n\t\t\t} = options;\n\n\t\t\tedgeLength = new LineSegment(vertex1, vertex3).length() / Math.sqrt(2);\n\t\t}\n\n\t\tif (edgeLength) {\n\t\t\tlet vertex2;\n\t\t\tlet vertex3;\n\t\t\tlet vertex4;\n\n\t\t\tif (options.vertex2) {\n\t\t\t\tvertex2 = options.vertex2;\n\t\t\t\tvertex3 = options.vertex3 || new Vector(vertex2, vertex1).rotate(90).head;\n\t\t\t\tvertex4 = options.vertex4 || new Vector(vertex3, vertex2).rotate(90).head;\n\t\t\t}\n\t\t\telse if (options.vertex3) {\n\t\t\t\tvertex3 = options.vertex3;\n\t\t\t\tvertex2 = new Vector(new Vector(vertex1, vertex3).midpoint(), vertex3).rotate(-90).head;\n\t\t\t\tvertex4 = options.vertex4 || new Vector(vertex3, vertex2).rotate(90).head;\n\t\t\t}\n\t\t\telse if (options.vertex4) {\n\t\t\t\tvertex4 = options.vertex4;\n\t\t\t\tvertex3 = new Vector(vertex4, vertex1).rotate(-90).head;\n\t\t\t\tvertex2 = new Vector(new Vector(vertex1, vertex3).midpoint(), vertex3).rotate(-90).head;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvertex2 = new Point(vertex1.x + edgeLength, vertex1.y);\n\t\t\t\tvertex3 = new Point(vertex1.x + edgeLength, vertex1.y - edgeLength);\n\t\t\t\tvertex4 = new Point(vertex1.x, vertex1.y - edgeLength);\n\t\t\t}\n\n\t\t\tsuper({\n\t\t\t\tedge1Length: edgeLength,\n\t\t\t\tedge2Length: edgeLength,\n\t\t\t\tvertex1\n\t\t\t});\n\n\t\t\tthis.edgeLength = edgeLength;\n\n\t\t\tthis.vertexMap = new Map();\n\n\t\t\tthis.vertexMap.set(\"A\", vertex1);\n\t\t\tthis.vertexMap.set(\"B\", vertex2);\n\t\t\tthis.vertexMap.set(\"C\", vertex3);\n\t\t\tthis.vertexMap.set(\"D\", vertex4);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error(\"invalid\");\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @returns {Point}\n\t * midpoint\n\t */\n\tmidpoint = (): Point => {\n\t\tconst {\n\t\t\tvertexMap\n\t\t} = this;\n\n\t\tconst vertex1 = vertexMap.get(\"A\");\n\t\tconst vertex2 = vertexMap.get(\"B\");\n\n\t\tif (vertex1 && vertex2) {\n\t\t\treturn new Vector(\n\t\t\t\tvertex1,\n\t\t\t\tvertex2\n\t\t\t).midpoint();\n\t\t}\n\t\tthrow new Error(\"midpoint fail\");\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param {GeometricObject} object\n\t * a geometric object\n\t * @returns {boolean}\n\t * if passed object is inside current object\n\t */\n\tcontains = (object: GeometricObject): boolean => {\n\t\tconsole.info(this.equiangular);\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param {number} angle\n\t * angle in degrees\n\t * @param {boolean} clockwise\n\t * clockwise or counterclockwise rotation\n\t * @returns {Square}\n\t * itself\n\t */\n\trotate = (angle: number, clockwise: boolean): Square => {\n\t\tconst {\n\t\t\tvertexMap\n\t\t} = this;\n\n\t\tconst vertex1 = vertexMap.get(\"A\");\n\t\tconst vertex2 = vertexMap.get(\"B\");\n\t\tconst vertex3 = vertexMap.get(\"C\");\n\t\tconst vertex4 = vertexMap.get(\"D\");\n\n\t\tif (vertex1 && vertex2 && vertex3 && vertex4) {\n\t\t\tvertexMap.set(\"A\", new Vector(this.midpoint(), vertex1).rotate(clockwise ? -angle : angle).head);\n\t\t\tvertexMap.set(\"B\", new Vector(this.midpoint(), vertex2).rotate(clockwise ? -angle : angle).head);\n\t\t\tvertexMap.set(\"C\", new Vector(this.midpoint(), vertex3).rotate(clockwise ? -angle : angle).head);\n\t\t\tvertexMap.set(\"D\", new Vector(this.midpoint(), vertex4).rotate(clockwise ? -angle : angle).head);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param {Circle} object\n\t * a geometric object\n\t * @returns {function}\n\t * function\n\t */\n\tmorph = (object: Circle): (point: Point) => Point => {\n\t\tconst {\n\t\t\tvertexMap\n\t\t} = this;\n\n\t\tconst vertex1 = vertexMap.get(\"A\");\n\t\tconst vertex2 = vertexMap.get(\"B\");\n\t\tconst vertex3 = vertexMap.get(\"C\");\n\t\tconst vertex4 = vertexMap.get(\"D\");\n\n\t\tif (vertex1 && vertex2 && vertex3 && vertex4) {\n\t\t\tconst edgeAB = new Vector(vertex1, vertex2);\n\t\t\tconst xAxisParallelThroughA = new Vector(vertex1, new Point(vertex1.x + 10, vertex1.y));\n\n\t\t\tconst angle = Math.acos(\n\t\t\t\t(\n\t\t\t\t\t(xAxisParallelThroughA.head.x * xAxisParallelThroughA.head.y) +\n\t\t\t\t\t(edgeAB.head.x * edgeAB.head.y)\n\t\t\t\t) /\n\t\t\t\t(\n\t\t\t\t\txAxisParallelThroughA.length() *\n\t\t\t\t\tedgeAB.length()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst orthogonalSquare = new Square({\n\t\t\t\tvertex1,\n\t\t\t\tvertex2,\n\t\t\t\tvertex3,\n\t\t\t\tvertex4,\n\t\t\t}).rotate(45 - angle, true);\n\n\t\t\tif (object instanceof Circle) {\n\t\t\t\tconst normalMin = -1;\n\t\t\t\tconst normalMax = 1;\n\n\t\t\t\tconst {\n\t\t\t\t\tvertexMap: orthogonalVertexMap\n\t\t\t\t} = orthogonalSquare;\n\n\t\t\t\tconst orthogonalVertex1 = orthogonalVertexMap.get(\"A\");\n\t\t\t\tconst orthogonalVertex2 = orthogonalVertexMap.get(\"B\");\n\t\t\t\tconst orthogonalVertex3 = orthogonalVertexMap.get(\"C\");\n\n\t\t\t\tif (orthogonalVertex1 && orthogonalVertex2 && orthogonalVertex3) {\n\t\t\t\t\tconst squareXMin = orthogonalVertex1.x;\n\t\t\t\t\tconst squareXMax = orthogonalVertex2.x;\n\t\t\t\t\tconst squareYMin = orthogonalVertex1.y;\n\t\t\t\t\tconst squareYMax = orthogonalVertex3.y;\n\n\t\t\t\t\treturn (point: Point): Point => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\ty\n\t\t\t\t\t\t} = point;\n\n\t\t\t\t\t\tconst normalizedX = (((x - squareXMin) * (normalMax - normalMin)) / (squareXMax - squareXMin)) + normalMin;\n\t\t\t\t\t\tconst normalizedY = (((y - squareYMin) * (normalMax - normalMin)) / (squareYMax - squareYMin)) + normalMin;\n\n\t\t\t\t\t\tconst newX = normalizedX * Math.sqrt(1 - (((normalizedY) ** 2) / 2));\n\t\t\t\t\t\tconst newY = normalizedY * Math.sqrt(1 - (((normalizedX) ** 2) / 2));\n\n\t\t\t\t\t\tconst denormalizedX = (((newX - normalMin) * (squareXMax - squareXMin)) / (normalMax - normalMin)) + squareXMin;\n\t\t\t\t\t\tconst denormalizedY = (((newY - normalMin) * (squareYMax - squareYMin)) / (normalMax - normalMin)) + squareYMin;\n\n\t\t\t\t\t\treturn new Vector(this.midpoint(), new Point(denormalizedX, denormalizedY)).rotate(angle).head;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn (): Point => new Point(0, 0);\n\t}\n}\n\nexport default Square;\n","// @flow\nimport ZeroDimensionalSpace from \"./zero.js\";\nimport Square from \"./two/square.js\";\n\n/**\n * one-dimensional space\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-09-20\n * @class OneDimensionalSpace\n * @extends {Array<ZeroDimensionalSpace>}\n */\nclass OneDimensionalSpace extends Array<ZeroDimensionalSpace> {\n\t/**\n\t * creates an instance of OneDimensionalSpace\n\t *\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-09-20\n\t * @param {Square} boundary\n\t * boundary\n\t * @param {number} step\n\t * step\n\t * @memberof OneDimensionalSpace\n\t */\n\tconstructor(boundary: Square, step) {\n\t\tsuper();\n\t}\n}\n\nexport default OneDimensionalSpace;\n","// @flow\nimport OneDimensionalSpace from \"./one.js\";\n\n/**\n * two-dimensional space\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-11\n * @class TwoDimensionalSpace\n * @extends {Array<OneDimensionalSpace>}\n */\nclass TwoDimensionalSpace extends Array<OneDimensionalSpace> {\n\t/**\n\t * creates an instance of TwoDimensionalSpace\n\t *\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-11\n\t * @memberof TwoDimensionalSpace\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default TwoDimensionalSpace;\n","// @flow\nimport TwoDimensionalSpace from \"./two.js\";\n\n/**\n * three-dimensional space\n *\n * @author nnmrts <nanomiratus@gmail.com>\n * @date 2019-10-11\n * @class ThreeDimensionalSpace\n * @extends {Array<TwoDimensionalSpace>}\n */\nclass ThreeDimensionalSpace extends Array<TwoDimensionalSpace> {\n\t/**\n\t * creates an instance of ThreeDimensionalSpace\n\t *\n\t * @author nnmrts <nanomiratus@gmail.com>\n\t * @date 2019-10-11\n\t * @memberof ThreeDimensionalSpace\n\t */\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport default ThreeDimensionalSpace;\n","// @flow\n\nexport { default as ZeroDimensionalSpace } from \"./spaces/zero.js\";\nexport { default as OneDimensionalSpace } from \"./spaces/one.js\";\nexport { default as TwoDimensionalSpace } from \"./spaces/two.js\";\nexport { default as ThreeDimensionalSpace } from \"./spaces/three.js\";\nexport { default as Square } from \"./spaces/two/square.js\";\n"]}